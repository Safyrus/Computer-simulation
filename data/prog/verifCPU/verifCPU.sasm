##############################
#
# author: Safyrus
#
# this program test if all instructions work correctly
# 
# the only one that need to work befor is:
# - MOV REG VAL
# - CMP REG VAL
# - JMP REG ADR
# - AND REG VAL
# those who cannot be tested are: NOP, RST and OFF
# 
# The program will stop if all instructions work correctly.
# Otherwise it will put the opcode of the instruction in register E
# 
##############################

##############################
# TODO
# - test 10 flag
# - reformat doc
# - update comments
# - check every test
# - reduce nessecary instructions
##############################

@origin 0000
    JMP $F :INIT

JMP_BACK:
    JMP $F $J1 $J2

DATA:
    1D %123 :DATA
    ~10100101 'A' :DATA:l :DATA:h
    "TESTING"
    ADD $A ~10110 'A'

INIT:
    NOP
    MOV $D 04

@import prog/verifCPU/verifCPU_MOV.sasm
@import prog/verifCPU/verifCPU_CMP.sasm
@import prog/verifCPU/verifCPU_ADD.sasm
@import prog/verifCPU/verifCPU_ADC.sasm
@import prog/verifCPU/verifCPU_SUB.sasm
@import prog/verifCPU/verifCPU_SBB.sasm
@import prog/verifCPU/verifCPU_MUL.sasm
@import prog/verifCPU/verifCPU_DIV.sasm
@import prog/verifCPU/verifCPU_MOD.sasm
@import prog/verifCPU/verifCPU_AND.sasm
@import prog/verifCPU/verifCPU_OR.sasm
@import prog/verifCPU/verifCPU_XOR.sasm
@import prog/verifCPU/verifCPU_JMP.sasm
@import prog/verifCPU/verifCPU_GET.sasm
@import prog/verifCPU/verifCPU_SET.sasm


END:
    OFF
