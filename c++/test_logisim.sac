# this program test if all instructions work correctly
# the only one that need to work befor is:
# - MOV REG VAL
# - CMP REG VAL
# - JMP REG ADR
# those who cannot be tested are: NOP, RST and OFF


MOV $D 04
##############################
# test MOV REG REG
MOV $A AA
MOV $B BB
MOV $A $B
CMP $A BB
JMP $D MOV_1_YES
JMP $F MOV_1_NOP

MOV_1_NOP:
MOV $E 03
JMP $F MOV_1_NOP

MOV_1_YES:
# test MOV REG REG
MOV $A 88
MOV $B 88
CMP $A $B
JMP $D CMP_1_YES
JMP $F CMP_1_NOP

CMP_1_NOP:
MOV $E 05
JMP $F CMP_1_NOP

CMP_1_YES:
# test MOV REG REG
MOV $B 88
CMP 88 $B
JMP $D CMP_2_YES
JMP $F CMP_2_NOP

CMP_2_NOP:
MOV $E 06
JMP $F CMP_2_NOP

CMP_2_YES:
# test MOV REG REG
CMP 88 88
JMP $D CMP_3_YES
JMP $F CMP_3_NOP

CMP_3_NOP:
MOV $E 08
JMP $F CMP_3_NOP

CMP_3_YES:
##############################
# test ADD REG REG REG
MOV $A 11
MOV $B 22
ADD $C $A $B
CMP $C 33
JMP $D ADD_1_YES
JMP $F ADD_1_NOP

ADD_1_NOP:
MOV $E 10
JMP $F ADD_1_NOP

ADD_1_YES:
# test ADC REG REG REG
MOV $A 11
MOV $B 22
ADC $C $A $B
CMP $C 34
JMP $D ADC_1_YES
JMP $F ADC_1_NOP

ADC_1_NOP:
MOV $E 11
JMP $F ADC_1_NOP

ADC_1_YES:
# test SUB REG REG REG
MOV $A 11
MOV $B 22
SUB $C $B $A
CMP $C 11
JMP $D SUB_1_YES
JMP $F SUB_1_NOP

SUB_1_NOP:
MOV $E 12
JMP $F SUB_1_NOP

SUB_1_YES:
# test SBB REG REG REG
MOV $A 11
MOV $B 22
SBB $C $B $A
CMP $C 10
JMP $D SBB_1_YES
JMP $F SBB_1_NOP

SBB_1_NOP:
MOV $E 13
JMP $F SBB_1_NOP

SBB_1_YES:
# test MUL REG REG REG
MOV $A 04
MOV $B 22
MUL $C $B $A
CMP $C 88
JMP $D MUL_1_YES
JMP $F MUL_1_NOP

MUL_1_NOP:
MOV $E 14
JMP $F MUL_1_NOP

MUL_1_YES:
# test DIV REG REG REG
MOV $A 11
MOV $B 22
DIV $C $B $A
CMP $C 02
JMP $D DIV_1_YES
JMP $F DIV_1_NOP

DIV_1_NOP:
MOV $E 15
JMP $F DIV_1_NOP

DIV_1_YES:
# test MOD REG REG REG
MOV $A 11
MOV $B 24
MOD $C $B $A
CMP $C 02
JMP $D MOD_1_YES
JMP $F MOD_1_NOP

MOD_1_NOP:
MOV $E 16
JMP $F MOD_1_NOP

MOD_1_YES:
# test AND REG REG REG
MOV $A 11
MOV $B 23
AND $C $B $A
CMP $C 01
JMP $D AND_1_YES
JMP $F AND_1_NOP

AND_1_NOP:
MOV $E 17
JMP $F AND_1_NOP

AND_1_YES:
# test OR REG REG REG
MOV $A 12
MOV $B 20
OR  $C $B $A
CMP $C 32
JMP $D OR_1_YES
JMP $F OR_1_NOP

OR_1_NOP:
MOV $E 18
JMP $F OR_1_NOP

OR_1_YES:
# test XOR REG REG REG
MOV $A 11
MOV $B 23
XOR $C $B $A
CMP $C 32
JMP $D XOR_1_YES
JMP $F XOR_1_NOP

XOR_1_NOP:
MOV $E 19
JMP $F XOR_1_NOP

XOR_1_YES:
##############################
# test ADD REG VAL REG
MOV $B 22
ADD $C 11 $B
CMP $C 33
JMP $D ADD_2_YES
JMP $F ADD_2_NOP

ADD_2_NOP:
MOV $E 20
JMP $F ADD_2_NOP

ADD_2_YES:
# test ADC REG VAL REG
MOV $B 22
ADC $C 11 $B
CMP $C 34
JMP $D ADC_2_YES
JMP $F ADC_2_NOP

ADC_2_NOP:
MOV $E 21
JMP $F ADC_2_NOP

ADC_2_YES:
# test SUB REG VAL REG
MOV $A 11
SUB $C 22 $A
CMP $C 11
JMP $D SUB_2_YES
JMP $F SUB_2_NOP

SUB_2_NOP:
MOV $E 22
JMP $F SUB_2_NOP

SUB_2_YES:
# test SBB REG VAL REG
MOV $A 11
SBB $C 22 $A
CMP $C 10
JMP $D SBB_2_YES
JMP $F SBB_2_NOP

SBB_2_NOP:
MOV $E 23
JMP $F SBB_2_NOP

SBB_2_YES:
# test MUL REG VAL REG
MOV $A 04
MUL $C 22 $A
CMP $C 88
JMP $D MUL_2_YES
JMP $F MUL_2_NOP

MUL_2_NOP:
MOV $E 24
JMP $F MUL_2_NOP

MUL_2_YES:
# test DIV REG VAL REG
MOV $A 11
DIV $C 22 $A
CMP $C 02
JMP $D DIV_2_YES
JMP $F DIV_2_NOP

DIV_2_NOP:
MOV $E 25
JMP $F DIV_2_NOP

DIV_2_YES:
# test MOD REG VAL REG
MOV $A 11
MOD $C 24 $A
CMP $C 02
JMP $D MOD_2_YES
JMP $F MOD_2_NOP

MOD_2_NOP:
MOV $E 26
JMP $F MOD_2_NOP

MOD_2_YES:
# test AND REG VAL REG
MOV $A 11
AND $C 23 $A
CMP $C 01
JMP $D AND_2_YES
JMP $F AND_2_NOP

AND_2_NOP:
MOV $E 27
JMP $F AND_2_NOP

AND_2_YES:
# test OR REG VAL REG
MOV $A 12
OR  $C 20 $A
CMP $C 32
JMP $D OR_2_YES
JMP $F OR_2_NOP

OR_2_NOP:
MOV $E 28
JMP $F OR_2_NOP

OR_2_YES:
# test XOR REG VAL REG
MOV $A 11
XOR $C 23 $A
CMP $C 32
JMP $D XOR_2_YES
JMP $F XOR_2_NOP

XOR_2_NOP:
MOV $E 29
JMP $F XOR_2_NOP

XOR_2_YES:
##############################
# test ADD REG REG VAL
MOV $A 11
ADD $C $A 22
CMP $C 33
JMP $D ADD_3_YES
JMP $F ADD_3_NOP

ADD_3_NOP:
MOV $E 30
JMP $F ADD_3_NOP

ADD_3_YES:
# test ADC REG REG VAL
MOV $A 11
ADC $C $A 22
CMP $C 34
JMP $D ADC_3_YES
JMP $F ADC_3_NOP

ADC_3_NOP:
MOV $E 31
JMP $F ADC_3_NOP

ADC_3_YES:
# test SUB REG REG VAL
MOV $B 22
SUB $C $B 11
CMP $C 11
JMP $D SUB_3_YES
JMP $F SUB_3_NOP

SUB_3_NOP:
MOV $E 32
JMP $F SUB_3_NOP

SUB_3_YES:
# test SBB REG REG VAL
MOV $B 22
SBB $C $B 11
CMP $C 10
JMP $D SBB_3_YES
JMP $F SBB_3_NOP

SBB_3_NOP:
MOV $E 33
JMP $F SBB_3_NOP

SBB_3_YES:
# test MUL REG REG VAL
MOV $B 22
MUL $C $B 04
CMP $C 88
JMP $D MUL_3_YES
JMP $F MUL_3_NOP

MUL_3_NOP:
MOV $E 34
JMP $F MUL_3_NOP

MUL_3_YES:
# test DIV REG REG VAL
MOV $B 22
DIV $C $B 11
CMP $C 02
JMP $D DIV_3_YES
JMP $F DIV_3_NOP

DIV_3_NOP:
MOV $E 35
JMP $F DIV_3_NOP

DIV_3_YES:
# test MOD REG REG VAL
MOV $B 24
MOD $C $B 11
CMP $C 02
JMP $D MOD_3_YES
JMP $F MOD_3_NOP

MOD_3_NOP:
MOV $E 36
JMP $F MOD_3_NOP

MOD_3_YES:
# test AND REG REG VAL
MOV $B 23
AND $C $B 11
CMP $C 01
JMP $D AND_3_YES
JMP $F AND_3_NOP

AND_3_NOP:
MOV $E 37
JMP $F AND_3_NOP

AND_3_YES:
# test OR REG REG VAL
MOV $B 20
OR  $C $B 12
CMP $C 32
JMP $D OR_3_YES
JMP $F OR_3_NOP

OR_3_NOP:
MOV $E 38
JMP $F OR_3_NOP

OR_3_YES:
# test XOR REG REG VAL
MOV $B 23
XOR $C $B 11
CMP $C 32
JMP $D XOR_3_YES
JMP $F XOR_3_NOP

XOR_3_NOP:
MOV $E 39
JMP $F XOR_3_NOP

XOR_3_YES:
##############################
# test ADD REG VAL VAL
ADD $C 11 22
CMP $C 33
JMP $D ADD_4_YES
JMP $F ADD_4_NOP

ADD_4_NOP:
MOV $E 40
JMP $F ADD_4_NOP

ADD_4_YES:
# test ADC REG VAL VAL
ADC $C 11 22
CMP $C 34
JMP $D ADC_4_YES
JMP $F ADC_4_NOP

ADC_4_NOP:
MOV $E 41
JMP $F ADC_4_NOP

ADC_4_YES:
# test SUB REG VAL VAL
SUB $C 22 11
CMP $C 11
JMP $D SUB_4_YES
JMP $F SUB_4_NOP

SUB_4_NOP:
MOV $E 42
JMP $F SUB_4_NOP

SUB_4_YES:
# test SBB REG VAL VAL
SBB $C 22 11
CMP $C 10
JMP $D SBB_4_YES
JMP $F SBB_4_NOP

SBB_4_NOP:
MOV $E 43
JMP $F SBB_4_NOP

SBB_4_YES:
# test MUL REG VAL VAL
MUL $C 22 04
CMP $C 88
JMP $D MUL_4_YES
JMP $F MUL_4_NOP

MUL_4_NOP:
MOV $E 44
JMP $F MUL_4_NOP

MUL_4_YES:
# test DIV REG VAL VAL
DIV $C 22 11
CMP $C 02
JMP $D DIV_4_YES
JMP $F DIV_4_NOP

DIV_4_NOP:
MOV $E 45
JMP $F DIV_4_NOP

DIV_4_YES:
# test MOD REG VAL VAL
MOD $C 24 11
CMP $C 02
JMP $D MOD_4_YES
JMP $F MOD_4_NOP

MOD_4_NOP:
MOV $E 46
JMP $F MOD_4_NOP

MOD_4_YES:
# test AND REG VAL VAL
AND $C 23 11
CMP $C 01
JMP $D AND_4_YES
JMP $F AND_4_NOP

AND_4_NOP:
MOV $E 47
JMP $F AND_4_NOP

AND_4_YES:
# test OR REG VAL VAL
OR  $C 20 12
CMP $C 32
JMP $D OR_4_YES
JMP $F OR_4_NOP

OR_4_NOP:
MOV $E 48
JMP $F OR_4_NOP

OR_4_YES:
# test XOR REG VAL VAL
XOR $C 23 11
CMP $C 32
JMP $D XOR_4_YES
JMP $F XOR_4_NOP

XOR_4_NOP:
MOV $E 49
JMP $F XOR_4_NOP

XOR_4_YES:

########################
OFF